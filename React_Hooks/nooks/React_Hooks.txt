React Hooks
https://ko.reactjs.org/docs/hooks-intro.html

-> functional component에서 state를 가질 수 있게 해줌
	 : class component, didmount, render등이 필요x
-. handling input, Fetching 문제

-. codesandbox에서 실행 : hooks를 자동으로 테스트(hooks들의 작동을 확인한 후 npm directory에 등록하기 위함)
	: github로 sign-in후 파일명 Nooks로 변경
-. const [item] = useState(1)
    : const item = useState(1)[0]

import React, { useState } from "react";
-. useState()는 value와 이를 변경하는 방법을 반환(Array형태로)
-. usetState()가 React state매니지먼트의 밑으로 들어가 훅을 땡기는 역할..

```jsx
//기존 class사용
class qudtls extends React.Component{
  state = {item : 1}

  render(){
      const {item} = this.state
      return (
        <div className="App">
          <h1>Hello {item}</h1>
          <button onClick={this.increamentItem}>increament</button>
          <button onClick={this.decreamentItem}>decreament</button>
        </div>
      )
    }
  increamentItem = () => {
    this.setState(state => {
      return (
        {item: state.item +1}
      )
    })
  }
  decreamentItem = () => {
    this.setState(state => {
      return (
        {item: state.item -1}
      )
    })
  }
}
```

```jsx 
//hooks사용
const App = () => {
  const [item, setItem] = useState(1);
  const increamentItem = () => setItem(item + 1);
  const decreamentItem = () => setItem(item - 1);
  return (
    <div className="App">
      <h1>Hello {item}</h1>
      <button onClick={increamentItem}>increament</button>
      <button onClick={decreamentItem}>decreament</button>
    </div>
  );
};
```
-. https://www.techiediaries.com/react-spread-operator-props-setstate/
	■ value={name.value} onChange.{name.onChange} 은
	{...name} 과 같은 의미다.
